'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.paramsPositions = undefined;
exports.setupMethodHandlers = setupMethodHandlers;

var _feathersCommons = require('feathers-commons');

var _utils = require('./utils');

// The position of the params parameters for a service method so that we can extend them
// default is 1
var paramsPositions = exports.paramsPositions = {
  find: 0,
  update: 2,
  patch: 2
};

// Set up all method handlers for a service and socket.
function setupMethodHandlers(info, socket, path, service) {
  this.methods.forEach(function (method) {
    if (typeof service[method] !== 'function') {
      return;
    }

    var name = path + '::' + method;
    var params = info.params(socket);
    var position = typeof paramsPositions[method] !== 'undefined' ? paramsPositions[method] : 1;

    socket.on(name, function () {
      try {
        var args = (0, _feathersCommons.getArguments)(method, arguments);
        args[position] = Object.assign({ query: args[position] }, params);
        service[method].apply(service, args);
      } catch (e) {
        var callback = arguments[arguments.length - 1];
        if (typeof callback === 'function') {
          callback((0, _utils.errorObject)(e));
        }
      }
    });
  });
}