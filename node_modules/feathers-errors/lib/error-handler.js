'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // jshint unused:false

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  options = _extends({}, defaults, options);

  if (typeof options.html === 'undefined') {
    options.html = {
      401: _path2.default.resolve(options.public, '401.html'),
      404: _path2.default.resolve(options.public, '404.html'),
      default: defaultError
    };
  }

  return function (error, req, res, next) {
    if (!(error instanceof _index2.default.FeathersError)) {
      var oldError = error;
      error = new _index2.default.GeneralError(oldError.message, {
        errors: oldError.errors
      });

      if (oldError.stack) {
        error.stack = oldError.stack;
      }
    }

    var code = !isNaN(parseInt(error.code, 10)) ? parseInt(error.code, 10) : 500;
    var formatter = {};

    if (options.html) {
      formatter['text/html'] = function () {
        var file = options.html[code];

        if (!file) {
          file = options.html.default || defaultError;
        }

        res.sendFile(file);
      };
    }

    formatter['application/json'] = function () {
      var output = _extends({}, error.toJSON());

      if (process.env.NODE_ENV === 'production') {
        delete output.stack;
      }

      res.json(output);
    };

    // Don't show stack trace if it is a 404 error
    if (code === 404) {
      error.stack = null;
    }

    res.status(code);

    res.format(formatter);
  };
};

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaults = {
  public: _path2.default.resolve(__dirname, 'public')
};
var defaultError = _path2.default.resolve(defaults.public, 'default.html');

module.exports = exports['default'];